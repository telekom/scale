import { createEvent as __stencil_createEvent } from "@stencil/core";
import { getConnect as __stencil_getConnect } from "@stencil/core";
import { getContext as __stencil_getContext } from "@stencil/core";
import { getElement as __stencil_getElement } from "@stencil/core";
import { Host as __stencil_Host } from "@stencil/core";
import { h as __stencil_h } from "@stencil/core";
import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from '@stencil/core';
import classNames from 'classnames';
export class card {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.size = '';
        this.theme = '';
        this.variant = '';
        this.disabled = false;
        this.deselected = false;
    }
    getCssClassMap() {
        return classNames('card', this.size && `card--size-${this.size}`, this.theme && `card--theme-${this.theme}`, this.variant && `card--variant-${this.variant}`, this.disabled && `card--disabled`, this.deselected && `card--deselected`);
    }
    render() {
        return (h("div", { class: this.getCssClassMap() }, h("div", { class: "card__body" }, h("slot", null))));
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:t-card"; }
}
