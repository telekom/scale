{{!--
Scale https://github.com/telekom/scale

Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.
--}}

{{#* inline "icon"}}m7.4 19.95c-.25-.35-.2-.8.1-1.05l8.8-6.9-8.75-6.9a.691.691 0 0 1 -.1-1.05c.25-.3.75-.4 1.05-.1l10.2 8.05-10.25 8.1c-.3.25-.8.2-1.05-.15z{{/inline}}

<div data-sketch-artboard="Text Lists" class="artboard" data-sketch-unnamed-component-path="Text Lists">
    <h1 class="title--artboard">Text Lists</h1>

    <h2 class="title--artboard-section">Ordered List</h2>
    <div class="agent-states--grid">
        <div class="agent-states--item">
            <p class="agent-states--label">:available</p>
            <scale-list ordered data-sketch-key="text-lists-1">
              <scale-list-item>List entry label
                <scale-list ordered>
                    <scale-list-item>Second level label
                        <scale-list ordered>
                            <scale-list-item>Third level label</scale-list-item>
                        </scale-list>
                    </scale-list-item>
                </scale-list>
              </scale-list-item>
            </scale-list>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:hover</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:focus</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:pressed</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:disabled</p>
        </div>
    </div>

    <h2 class="title--artboard-section">Unordered List</h2>
    <div class="agent-states--grid">
        <div class="agent-states--item">
            <p class="agent-states--label">:available</p>
            <scale-list data-sketch-key="text-lists-2">
              <scale-list-item>List entry label
                <scale-list>
                    <scale-list-item>Second level label
                        <scale-list>
                            <scale-list-item>Third level label</scale-list-item>
                        </scale-list>
                    </scale-list-item>
                </scale-list>
              </scale-list-item>
            </scale-list>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:hover</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:focus</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:pressed</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:disabled</p>
        </div>
    </div>
{{!--
    <h2 class="title--artboard-section">Unordered List with Custom Icon</h2>
    <div class="agent-states--grid">
        <div class="agent-states--item">
            <p class="agent-states--label">:available</p>
            <scale-list data-sketch-key="text-lists-3">
                <scale-list-item marker="false">
                    <scale-icon path="{{>icon}}" />
                    List entry label
                </scale-list-item>
            </scale-list>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:hover</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:focus</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:pressed</p>
        </div>
        <div class="agent-states--item">
            <p class="agent-states--label">:disabled</p>
        </div>
    </div>
--}}
</div>

<script src="/symbol_names.js"></script>
<script>
    var i = 0;
    Array.from(document.querySelectorAll("scale-list")).forEach(btn => {
        if (btn.dataset.sketchKey) {
            i++;
            btn.dataset.sketchSymbol = `List / ${
                order(0, btn.hasAttribute('ordered') ? 'Ordered' : (i === 3 ? 'Custom Icon' : 'Unordered'))
            }`;
        }
    });
</script>
