{{!--
Scale https://github.com/telekom/scale

Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.
--}}

<div data-sketch-artboard="Icons" class="artboard">
  <h1 class="title--artboard">Icons</h1>

  <div id="icons-container"></div>
</div>

<style>
  .icon-container {
    display: inline-block;
    vertical-align: top;
    width: 220px;
    padding-right: 10px;
    margin-bottom: 30px;
  }
  .icon-container > div {
    display: inline-block;
    vertical-align: top;
    padding-right: 40px;
    margin-bottom: 30px;
  }
</style>

<script src="/symbol_names.js"></script>
<script>
  function createIcon(category, shortName, fullName, selected) {
    const iconContainer = document.createElement('div');

    const label = document.createElement('p');
    label.textContent = selected ? 'Selected' : 'Standard';
    iconContainer.appendChild(label);

    const icon = document.createElement(fullName);
    if (selected) icon.setAttribute('selected', 'true');
    icon.setAttribute('size', '24');
    icon.color = "#191919";
    icon.dataset.sketchKey = `icon-${
      selected ? 'selected' : 'standard'
    }-${fullName}`;
    icon.dataset.sketchSymbol = `Icon / ${category} / ${shortName
      .replace(/\b./g, (m) => m.toLocaleUpperCase())
      .replace(/-/g, ' ')} / ${order(2, label.textContent)}`;
    iconContainer.appendChild(icon);

    return iconContainer;
  }

  fetch('./components/scale-icons.json')
    .then((json) => json.json())
    .then((icons) => {
      const iconsContainer = document.body.querySelector('#icons-container');
      icons.forEach((category) => {
        const h2 = document.createElement('h2');
        h2.className = 'title--artboard-section';
        h2.textContent = category.label;
        iconsContainer.appendChild(h2);

        const categoryContainer = document.createElement('div');
        iconsContainer.appendChild(categoryContainer);

        category.items.forEach((item) => {
          const iconContainer = document.createElement('div');
          iconContainer.className = 'icon-container';
          categoryContainer.appendChild(iconContainer);

          const h3 = document.createElement('h3');
          h3.textContent = item;
          iconContainer.appendChild(h3);

          const name = `scale-icon-${category.category}-${item}`;

          const icon = document.createElement(name);
          iconContainer.appendChild(
            createIcon(category.label, item, name, false)
          );
          iconContainer.appendChild(
            createIcon(category.label, item, name, true)
          );
        });
      });
    });
</script>
