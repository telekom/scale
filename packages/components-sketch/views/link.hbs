{{!--
Scale https://github.com/telekom/scale

Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.
--}}

{{#* inline "icon"}}m12.65 3 1.5 1.5h-9.65v13.5c0 .85.65 1.5 1.5 1.5h12c.85 0
1.5-.65 1.5-1.5v-8.15l1.5 1.5v6.65c0 1.65-1.35 3-3 3h-12c-1.65
0-3-1.35-3-3v-15zm10.05-1.65-1.65 7.9-2.6-2.6-7.55
7.55c-.15.15-.35.2-.55.2s-.4-.05-.55-.2c-.3-.3-.3-.75 0-1.05l7.55-7.55-2.6-2.6
7.95-1.65z{{/inline}}
<style>
  .artboard {
    width: 1536px;
  }

  .agent-states--grid {
    grid-template-columns: repeat(6, 1fr)
  }
</style>
<div data-sketch-artboard="Link" class="artboard">
  <h1 class="title--artboard">Link</h1>

  <h2 class="title--artboard-section">Link</h2>
  <div class="agent-states--grid" data-category="Standard">
    <div class="agent-states--item">
      <p class="agent-states--label">:available</p>
      <scale-link data-sketch-key="link-0" href="#">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:hover</p>
      <scale-link data-sketch-key="link-1" href="#" data-sketch-state="hover">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:focus</p>
      <scale-link data-sketch-key="link-2" href="#" data-sketch-state="focus">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:pressed</p>
      <scale-link data-sketch-key="link-3" href="#" data-sketch-state="active">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:visited</p>
      <scale-link data-sketch-key="link-visited" href="#" data-sketch-state="visited">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:disabled</p>
      <scale-link data-sketch-key="link-4" href="#" disabled>Link Text</scale-link>
    </div>
  </div>

  <h2 class="title--artboard-section">Link no underline</h2>
  <div class="agent-states--grid" data-category="No Underline">
    <div class="agent-states--item">
      <p class="agent-states--label">:available</p>
      <scale-link data-sketch-key="link-5" omit-underline href="/link">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:hover</p>
      <scale-link data-sketch-key="link-6" href="/link" data-sketch-state="hover">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:focus</p>
      <scale-link data-sketch-key="link-7" href="/link" data-sketch-state="focus">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:pressed</p>
      <scale-link data-sketch-key="link-8" href="/link" data-sketch-state="active">Link Text</scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:visited</p>
      <scale-link data-sketch-key="link-visited-no-underline" omit-underline href="#" data-sketch-state="visited">Link Text
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:disabled</p>
      <scale-link data-sketch-key="link-9" href="/link" disabled>Link Text</scale-link>
    </div>
  </div>

  <h2 class="title--artboard-section">Link with icon</h2>
  <div class="agent-states--grid" data-category="Standard">
    <div class="agent-states--item">
      <p class="agent-states--label">:available</p>
      <scale-link data-sketch-key="link-10" data-has-icon="true" href="#">Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:hover</p>
      <scale-link data-sketch-key="link-11" data-has-icon="true" href="#" data-sketch-state="hover">Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:focus</p>
      <scale-link data-sketch-key="link-12" data-has-icon="true" href="#" data-sketch-state="focus">Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:pressed</p>
      <scale-link data-sketch-key="link-13" data-has-icon="true" href="#" data-sketch-state="active">Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:visited</p>
      <scale-link data-sketch-key="link-visited-icon" data-has-icon="true" href="#" data-sketch-state="visited">
        Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:disabled</p>
      <scale-link data-sketch-key="link-14" data-has-icon="true" href="#" disabled>Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
  </div>

  <h2 class="title--artboard-section">Link with icon no underline</h2>
  <div class="agent-states--grid" data-category="No Underline">
    <div class="agent-states--item">
      <p class="agent-states--label">:available</p>
      <scale-link omit-underline data-sketch-key="link-15" data-has-icon="true" href="/link">Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:hover</p>
      <scale-link data-sketch-key="link-16" data-has-icon="true" href="/link" data-sketch-state="hover">
        Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:focus</p>
      <scale-link data-sketch-key="link-17" data-has-icon="true" href="/link" data-sketch-state="focus">
        Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:pressed</p>
      <scale-link data-sketch-key="link-18" data-has-icon="true" href="/link" data-sketch-state="active">
        Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:visited</p>
      <scale-link data-sketch-key="link-visited-icon-no-underline" omit-underline data-has-icon="true" href="#"
        data-sketch-state="visited">
        Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
    <div class="agent-states--item">
      <p class="agent-states--label">:disabled</p>
      <scale-link data-sketch-key="link-19" data-has-icon="true" href="/link" disabled>Link Text
        <scale-icon-navigation-external-link size="16" accessibility-title="open link in new tab" slot="icon">
        </scale-icon-navigation-external-link>
      </scale-link>
    </div>
  </div>
</div>

<script src="/symbol_names.js"></script>
<script src="/placeCursor.js"></script>
<script>
  const allLinks = Array.from(document.querySelectorAll('scale-link'));
  function fakeUnderline() {
    const allLinksWithUnderline = Array.from(document.querySelectorAll('scale-link')).filter(link => !link.hasAttribute("omit-underline"));
console.log(allLinksWithUnderline);
    allLinksWithUnderline.forEach(link => {
      const anchor = link.shadowRoot.querySelector('a')
      const content = link.shadowRoot.querySelector('[part="content"]')
      const style = getComputedStyle(anchor);
      const decoration = style.textDecoration.replace('underline', '');
      const thickness = getComputedStyle(anchor).getPropertyValue('--line-thickness')
      const offset = style.textUnderlineOffset

      content.style.paddingBottom = parseInt(offset) - 3 + 'px'
      content.style.borderBottom = decoration;
      content.style.borderBottomWidth = "var(--line-thickness, var(--line-thickness-initial))";
    });


  }

  function assignPointers() {
    const targetStates = Array.from(document.querySelectorAll('scale-link'))
      .filter((component) => {
        if (['hover', 'active'].includes(component.dataset.fakeState))
          return component;
        if (['hover', 'active'].includes(component.dataset.sketchState))
          return component;
      });


    targetStates.forEach((link) => {
      placeCursor(link, { left: '2px', top: '70%' })
    });
  }

  function onBeforePage2Layers() {
    fakeUnderline();
    // assignPointers();
  }

  document.addEventListener("DOMContentLoaded", () => {
    setTimeout(() => {
      onBeforePage2Layers()
    }, 1000)
  });


  allLinks.forEach((link, i) => {
    link.dataset.sketchSymbol = `Link / ${order(
      1,
      getCategoryName(link)
    )} / ${order(
      2,
      link.dataset.hasIcon ? 'With Icon' : 'Without Icon'
    )} / ${order(4, getStateName(link))}`;
  });
</script>
